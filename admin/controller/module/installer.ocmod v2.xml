<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Opencart non ftp Installer</name>
    <version>1.0</version>
    <code>s155</code>
    <author>http://goo.gl/m2PGTc</author>
    <link>http://goo.gl/0GUoeQ</link>
    <file path="admin/controller/extension/installer.php">
      <operation>
           <search><![CDATA[
      public function ftp() {
             ]]></search>
           <add position="replace"><![CDATA[
      public function ftpold() {
           ]]></add>
       </operation>
<operation>
           <search><![CDATA[
      public function unzip() {
             ]]></search>
           <add position="before"><![CDATA[
      public function ftp() {
		$this->load->language('extension/installer');

		$json = array();

		if (!$this->user->hasPermission('modify', 'extension/installer')) {
			$json['error'] = $this->language->get('error_permission');
		}
		$directory = DIR_UPLOAD . str_replace(array('../', '..\\', '..'), '', $this->request->post['path']) . '/upload/';

		if (!is_dir($directory)) {
			$json['error'] = $this->language->get('error_directory');
		}

		if (!$json) {
			// Get a list of files ready to upload
			$files = array();

			$path = array($directory . '*');

			while (count($path) != 0) {
				$next = array_shift($path);

				foreach ((array)glob($next) as $file) {
					if (is_dir($file)) {
						$path[] = $file . '/*';
					}

					$files[] = $file;
				}
			}


						$root = str_replace("/admin","", DIR_APPLICATION);



					if ($root) {
						foreach ($files as $file) {
							$destination = substr($file, strlen($directory));

							// Upload everything in the upload directory
							// Many people rename their admin folder for security purposes which I believe should be an option during installation just like setting the db prefix.
							// the following code would allow you to change the name of the following directories and any extensions installed will still go to the right directory.
							if (substr($destination, 0, 5) == 'admin') {
								$destination = basename(DIR_APPLICATION) . substr($destination, 5);
							}

							if (substr($destination, 0, 7) == 'catalog') {
								$destination = basename(DIR_CATALOG) . substr($destination, 7);
							}

							if (substr($destination, 0, 5) == 'image') {
								$destination = basename(DIR_IMAGE) . substr($destination, 5);
							}

							if (substr($destination, 0, 6) == 'system') {
								$destination = basename(DIR_SYSTEM) . substr($destination, 6);
							}

							if (is_dir($file)) {
								if(strrpos($destination, '/')===true){
                $dir=substr($destination, 0, strrpos($destination, '/'));

                $list =(file_exists($root.$dir))? scandir($root.$dir):array();
                }
else {
$list =(file_exists($root.$destination))? scandir($root.$destination):array();
}
								// Basename all the directories because on some servers they don't return the fulll paths.
								$list_data = array();

								foreach ($list as $list) {
									$list_data[] = basename($list);
								}

								if (!in_array(basename($destination), $list_data)) {
									if(!file_exists($root.$destination))
									if (!mkdir($root.$destination)) {
										$json['error'] = sprintf($this->language->get('error_ftp_directory'), $destination);
									}
								}
							}

							if (is_file($file)) {
								if (!copy($file, $root.$destination)) {
									$json['error'] = sprintf($this->language->get('error_ftp_file'), $file);
								}
							}
						}
					} else {
						$json['error'] = sprintf($this->language->get('error_ftp_root'), $root);
					}




		}

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
           ]]></add>
       </operation>
    </file>

</modification>
